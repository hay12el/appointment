{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport client from \"../api/client\";\nimport React, { useContext } from \"react\";\nimport { Formik } from \"formik\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, colors, StyledButton, ButtonText, Line, ExtraText, ExtraView, TextLink, TextLinkContent } from \"./../components/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar brand = Colors.brand,\n    derLight = Colors.derLight,\n    primary = Colors.primary;\nimport { Octicons, Ionicons } from '@expo/vector-icons';\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../contexts/userContexts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hidePassword = _useState6[0],\n      setHidePassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isError = _useState8[0],\n      setIsError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      Login = _useContext.Login;\n\n  var login = function login(values, formikActions) {\n    var res;\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(client.post('/users/login', _objectSpread({}, values), {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function _callee(response) {\n              var newUser;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', response.data.token));\n\n                    case 2:\n                      newUser = response.data.user;\n                      Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(StyledContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsxs(InnerContainer, {\n      children: [_jsx(PageLogo, {\n        resizeMode: \"cover\",\n        source: require(\"./../assets/lak.jpeg\")\n      }), _jsx(PageTitle, {\n        children: \"\\u05E8\\u05D7\\u05DC \\u05E6\\u05D9\\u05E4\\u05D5\\u05E8\\u05E0\\u05D9\\u05D9\\u05DD\"\n      }), _jsx(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        onSubmit: login,\n        children: function children(_ref2) {\n          var handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              values = _ref2.values;\n          return _jsxs(StyledFormArea, {\n            children: [_jsx(MyTextInput, {\n              label: \"\\u05DB\\u05EA\\u05D5\\u05D1\\u05EA \\u05DE\\u05D9\\u05D9\\u05DC\",\n              icon: \"mail\",\n              placeholder: \"\\u05D0\\u05D9\\u05DE\\u05D9\\u05D9\\u05DC\",\n              placeholderTextColor: derLight,\n              onChangeText: handleChange('email'),\n              onBlur: handleBlur('email'),\n              value: values.email,\n              keboardType: \"email-address\"\n            }), _jsx(MyTextInput, {\n              label: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\",\n              icon: \"lock\",\n              placeholder: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\",\n              placeholderTextColor: derLight,\n              onChangeText: handleChange('password'),\n              onBlur: handleBlur('password'),\n              value: values.password,\n              secureTextEntry: hidePassword,\n              isPassword: hidePassword,\n              hidePassword: hidePassword,\n              setHidePassword: setHidePassword\n            }), _jsx(StyledButton, {\n              onPress: handleSubmit,\n              children: _jsx(ButtonText, {\n                children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\\u05D9\"\n              })\n            }), _jsx(Line, {}), _jsxs(ExtraView, {\n              children: [_jsx(TextLinkContent, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"SignUp\");\n                },\n                children: \" \\u05D4\\u05D9\\u05E8\\u05E9\\u05DE\\u05D9 \"\n              }), _jsx(ExtraText, {\n                children: \"\\u05E2\\u05D5\\u05D3 \\u05DC\\u05D0 \\u05E0\\u05E8\\u05E9\\u05DE\\u05EA?\"\n              }), _jsx(TextLink, {})]\n            })]\n          });\n        }\n      })]\n    })]\n  });\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return _jsxs(View, {\n    children: [_jsx(LeftIcon, {\n      children: _jsx(Octicons, {\n        name: icon,\n        size: 30,\n        color: brand\n      })\n    }), _jsx(StyledInputLabel, {\n      children: label\n    }), _jsx(StyledTextInput, _objectSpread({}, props)), isPassword && _jsx(RightIcon, {\n      onPress: function onPress() {\n        return setHidePassword(!hidePassword);\n      },\n      children: _jsx(Ionicons, {\n        size: 30,\n        color: derLight,\n        name: hidePassword ? 'md-eye-off' : 'md-eye'\n      })\n    })]\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/hay12/OneDrive/שולחן העבודה/the/client/screens/Login.js"],"names":["StatusBar","client","React","useContext","Formik","AsyncStorage","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","colors","StyledButton","ButtonText","Line","ExtraText","ExtraView","TextLink","TextLinkContent","brand","Colors","derLight","primary","Octicons","Ionicons","useState","UserContext","Login","navigation","email","setEmail","password","setPassword","hidePassword","setHidePassword","isError","setIsError","message","setMessage","user","login","values","formikActions","post","headers","then","response","setItem","data","token","newUser","_id","username","phone","queues","catch","err","console","log","res","require","handleChange","handleBlur","handleSubmit","navigate","MyTextInput","label","icon","isPassword","props"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SACIC,eADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAIIC,SAJJ,EAKIC,QALJ,EAMIC,cANJ,EAOIC,QAPJ,EAQIC,gBARJ,EASIC,eATJ,EAUIC,SAVJ,EAWIC,MAXJ,EAYIC,YAZJ,EAaIC,UAbJ,EAcIC,IAdJ,EAeIC,SAfJ,EAgBIC,SAhBJ,EAiBIC,QAjBJ,EAkBIC,eAlBJ;;;;AAsBA,IAAOC,KAAP,GAAmCC,MAAnC,CAAOD,KAAP;AAAA,IAAcE,QAAd,GAAmCD,MAAnC,CAAcC,QAAd;AAAA,IAAwBC,OAAxB,GAAmCF,MAAnC,CAAwBE,OAAxB;AAEA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,oBAAjC;AAGA,SAASJ,MAAT,QAAuB,qCAAvB;AACA,SAASK,QAAT,QAAyB,OAAzB;AACA,SAAQC,WAAR;;;;AAEA,IAAMC,KAAK,GAAG,qBAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAC5B,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCP,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BX,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAsBxC,UAAU,CAAC4B,WAAD,CAAhC;AAAA,MAAOa,IAAP,eAAOA,IAAP;AAAA,MAAaZ,KAAb,eAAaA,KAAb;;AAEA,MAAMa,KAAK,GAAG,SAARA,KAAQ,CAAOC,MAAP,EAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQ9C,MAAM,CAAC+C,IAAP,CAAY,cAAZ,oBAAgCF,MAAhC,GAAyC;AAC3DG,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AADkD,aAAzC,EAIfC,IAJe,CAIV,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACE9C,YAAY,CAAC+C,OAAb,CAAqB,OAArB,EAA8BD,QAAQ,CAACE,IAAT,CAAcC,KAA5C,CADF;;AAAA;AAEEC,sBAAAA,OAFF,GAEYJ,QAAQ,CAACE,IAAT,CAAcT,IAF1B;AAGJZ,sBAAAA,KAAK,CAACuB,OAAO,CAACC,GAAT,EAAcD,OAAO,CAACE,QAAtB,EAAgCF,OAAO,CAACrB,KAAxC,EAA+CqB,OAAO,CAACG,KAAvD,EAA8DH,OAAO,CAACI,MAAtE,CAAL;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJU,EAQfC,KARe,CAQT,UAACC,GAAD,EAAS;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,aAViB,CADR;;AAAA;AACJG,YAAAA,GADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAcA,SACI,MAAC,eAAD;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADJ,EAEI,MAAC,cAAD;AAAA,iBACI,KAAC,QAAD;AAAU,QAAA,UAAU,EAAC,OAArB;AAA6B,QAAA,MAAM,EAAIC,OAAO;AAA9C,QADJ,EAEI,KAAC,SAAD;AAAA;AAAA,QAFJ,EAGI,KAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAAC/B,UAAAA,KAAK,EAAE,EAAR;AAAYE,UAAAA,QAAQ,EAAC;AAArB,SADnB;AAEI,QAAA,QAAQ,EAAES,KAFd;AAAA,kBAGE;AAAA,cAAEqB,YAAF,SAAEA,YAAF;AAAA,cAAgBC,UAAhB,SAAgBA,UAAhB;AAAA,cAA4BC,YAA5B,SAA4BA,YAA5B;AAAA,cAA0CtB,MAA1C,SAA0CA,MAA1C;AAAA,iBACE,MAAC,cAAD;AAAA,uBACI,KAAC,WAAD;AACI,cAAA,KAAK,EAAC,yDADV;AAEI,cAAA,IAAI,EAAG,MAFX;AAGI,cAAA,WAAW,EAAC,sCAHhB;AAII,cAAA,oBAAoB,EAAEpB,QAJ1B;AAKI,cAAA,YAAY,EAAEwC,YAAY,CAAC,OAAD,CAL9B;AAMI,cAAA,MAAM,EAAEC,UAAU,CAAC,OAAD,CANtB;AAOI,cAAA,KAAK,EAAErB,MAAM,CAACZ,KAPlB;AAQI,cAAA,WAAW,EAAC;AARhB,cADJ,EAWI,KAAC,WAAD;AACI,cAAA,KAAK,EAAC,gCADV;AAEI,cAAA,IAAI,EAAG,MAFX;AAGI,cAAA,WAAW,EAAC,gCAHhB;AAII,cAAA,oBAAoB,EAAER,QAJ1B;AAKI,cAAA,YAAY,EAAEwC,YAAY,CAAC,UAAD,CAL9B;AAMI,cAAA,MAAM,EAAEC,UAAU,CAAC,UAAD,CANtB;AAOI,cAAA,KAAK,EAAErB,MAAM,CAACV,QAPlB;AAQI,cAAA,eAAe,EAAEE,YARrB;AASI,cAAA,UAAU,EAAEA,YAThB;AAUI,cAAA,YAAY,EAAEA,YAVlB;AAWI,cAAA,eAAe,EAAEC;AAXrB,cAXJ,EAwBI,KAAC,YAAD;AAAc,cAAA,OAAO,EAAE6B,YAAvB;AAAA,wBACI,KAAC,UAAD;AAAA;AAAA;AADJ,cAxBJ,EA6BI,KAAC,IAAD,KA7BJ,EA+BI,MAAC,SAAD;AAAA,yBACI,KAAC,eAAD;AAAiB,gBAAA,OAAO,EAAG;AAAA,yBAAMnC,UAAU,CAACoC,QAAX,CAAoB,QAApB,CAAN;AAAA,iBAA3B;AAAA;AAAA,gBADJ,EAEI,KAAC,SAAD;AAAA;AAAA,gBAFJ,EAKI,KAAC,QAAD,KALJ;AAAA,cA/BJ;AAAA,YADF;AAAA;AAHF,QAHJ;AAAA,MAFJ;AAAA,IADJ;AAyDH,CA/ED;;AAiFA,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAuE;AAAA,MAArEC,KAAqE,SAArEA,KAAqE;AAAA,MAA9DC,IAA8D,SAA9DA,IAA8D;AAAA,MAAxDC,UAAwD,SAAxDA,UAAwD;AAAA,MAA5CnC,YAA4C,SAA5CA,YAA4C;AAAA,MAA/BC,eAA+B,SAA/BA,eAA+B;AAAA,MAAXmC,KAAW;;AACvF,SACI,MAAC,IAAD;AAAA,eACI,KAAC,QAAD;AAAA,gBACI,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,IAAI,EAAE,EAA5B;AAAgC,QAAA,KAAK,EAAGhD;AAAxC;AADJ,MADJ,EAII,KAAC,gBAAD;AAAA,gBAAmB+C;AAAnB,MAJJ,EAKI,KAAC,eAAD,oBAAqBG,KAArB,EALJ,EAMKD,UAAU,IAEP,KAAC,SAAD;AAAW,MAAA,OAAO,EAAE;AAAA,eAAKlC,eAAe,CAAC,CAACD,YAAF,CAApB;AAAA,OAApB;AAAA,gBACI,KAAC,QAAD;AAAU,QAAA,IAAI,EAAE,EAAhB;AAAoB,QAAA,KAAK,EAAEZ,QAA3B;AAAqC,QAAA,IAAI,EAAEY,YAAY,GAAG,YAAH,GAAkB;AAAzE;AADJ,MARR;AAAA,IADJ;AAeH,CAhBD;;AAkBA,eAAeN,KAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport client from \"../api/client\";\r\nimport React, { useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea, \r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    RightIcon,\r\n    colors,\r\n    StyledButton,\r\n    ButtonText,\r\n    Line,\r\n    ExtraText,\r\n    ExtraView,\r\n    TextLink,\r\n    TextLinkContent\r\n} from './../components/styles'\r\nimport {View, Text, Button} from 'react-native';\r\n\r\nconst {brand, derLight, primary} = Colors;\r\n\r\nimport {Octicons, Ionicons} from '@expo/vector-icons';\r\n\r\n/*import {colors} from './../components/styles';*/\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\nimport { useState } from \"react\";\r\nimport {UserContext} from '../contexts/userContexts'\r\n\r\nconst Login = ({navigation}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const [isError, setIsError] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const {user, Login} = useContext(UserContext);\r\n\r\n    const login = async (values, formikActions) => {\r\n        const res = await client.post('/users/login', {...values}, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        }).then(async (response) => {\r\n            await AsyncStorage.setItem('token', response.data.token);\r\n            const newUser = response.data.user;\r\n            Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StatusBar style=\"dark\" />\r\n            <InnerContainer>\r\n                <PageLogo resizeMode=\"cover\" source = {require('./../assets/lak.jpeg')}/>\r\n                <PageTitle>רחל ציפורניים</PageTitle>\r\n                <Formik\r\n                    initialValues={{email: '', password:''}}\r\n                    onSubmit={login}\r\n                >{({handleChange, handleBlur, handleSubmit, values}) => (\r\n                    <StyledFormArea>\r\n                        <MyTextInput \r\n                            label=\"כתובת מייל\"\r\n                            icon = \"mail\"\r\n                            placeholder=\"אימייל\"\r\n                            placeholderTextColor={derLight}\r\n                            onChangeText={handleChange('email')}\r\n                            onBlur={handleBlur('email')}\r\n                            value={values.email}\r\n                            keboardType=\"email-address\"\r\n                        />\r\n                        <MyTextInput \r\n                            label=\"סיסמא\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"סיסמא\"\r\n                            placeholderTextColor={derLight}\r\n                            onChangeText={handleChange('password')}\r\n                            onBlur={handleBlur('password')}\r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword={hidePassword}\r\n                            hidePassword={hidePassword}\r\n                            setHidePassword={setHidePassword}\r\n                        />\r\n                        <StyledButton onPress={handleSubmit}>\r\n                            <ButtonText>\r\n                                התחברי\r\n                            </ButtonText>\r\n                        </StyledButton>\r\n                        <Line/>\r\n\r\n                        <ExtraView>\r\n                            <TextLinkContent onPress={ () => navigation.navigate(\"SignUp\")}> הירשמי </TextLinkContent>\r\n                            <ExtraText>\r\n                                עוד לא נרשמת?\r\n                            </ExtraText>\r\n                            <TextLink>\r\n                            </TextLink>\r\n                        </ExtraView>\r\n                    </StyledFormArea>\r\n                )}\r\n\r\n\r\n                </Formik>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nconst MyTextInput = ({label, icon, isPassword, hidePassword,setHidePassword, ...props}) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color= {brand} />\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            <StyledTextInput {...props} />\r\n            {isPassword && (\r\n\r\n                <RightIcon onPress={()=> setHidePassword(!hidePassword)}>\r\n                    <Ionicons size={30} color={derLight} name={hidePassword ? 'md-eye-off' : 'md-eye'}/>\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    )\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}