{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Calendar() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toApear = _useState2[0],\n      SetApearence = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedDate = _useState4[0],\n      setSelectedDate = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hours = _useState6[0],\n      setHours = _useState6[1];\n\n  function visi() {\n    SetApearence(!toApear);\n  }\n\n  ;\n\n  var onDateChange = function onDateChange(date) {\n    setSelectedDate(date);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"\\u05D4\\u05D6\\u05DE\\u05E0\\u05EA \\u05EA\\u05D5\\u05E8\",\n      onPress: function onPress() {\n        return visi();\n      }\n    }), _jsx(Modal, {\n      visible: toApear,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(CalendarPicker, {\n          startFromMonday: false,\n          weekdays: ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'],\n          months: ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אורטובר', 'נובמבר', 'דצמבר'],\n          onDateChange: onDateChange,\n          previousTitle: \"\\u05D4\\u05E7\\u05D5\\u05D3\\u05DD\",\n          nextTitle: \"\\u05D4\\u05D1\\u05D0\"\n        }), _jsxs(View, {\n          style: {\n            height: '50%',\n            width: '97%',\n            borderRadius: 5\n          },\n          children: [_jsx(ScrollView, {\n            children: hours.map(function (h, i, all) {\n              return _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return console.log(all[i]);\n                },\n                children: _jsx(View, {\n                  style: {\n                    borderWidth: 1,\n                    borderColor: \"#FFD9D9\",\n                    backgroundColor: \"#FFD9D9\",\n                    borderRadius: 10,\n                    height: 60,\n                    marginLeft: 3,\n                    marginRight: 3,\n                    marginVertical: 2\n                  },\n                  children: _jsxs(Text, {\n                    style: {\n                      textAlign: 'right',\n                      fontSize: 20\n                    },\n                    children: [all[i], \":00 \"]\n                  })\n                }, i)\n              });\n            })\n          }), _jsxs(Text, {\n            children: [\" \", selectedDate ? selectedDate.toString() : 'no Choose', \" \"]\n          })]\n        }), _jsx(Button, {\n          title: \"\\u05E1\\u05D2\\u05D5\\u05E8\",\n          onPress: function onPress() {\n            return visi();\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    borderColor: '#0000ff'\n  },\n  hours: {}\n});","map":{"version":3,"sources":["C:/Users/hay12/OneDrive/שולחן העבודה/the/client/screens/newQueue.js"],"names":["React","useEffect","useState","StatusBar","CalendarPicker","Calendar","toApear","SetApearence","selectedDate","setSelectedDate","hours","setHours","visi","onDateChange","date","styles","container","height","width","borderRadius","map","h","i","all","console","log","borderWidth","borderColor","backgroundColor","marginLeft","marginRight","marginVertical","textAlign","fontSize","toString","StyleSheet","create","paddingTop","flex","alignItems","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View ,Button, TextInput, ScrollView, FlatList, TouchableOpacity, Modal} from 'react-native';\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\n\r\nexport default function Calendar() {\r\n    const [toApear, SetApearence] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [hours, setHours] = useState({\r\n\r\n    });\r\n    function visi(){\r\n        SetApearence(!toApear);\r\n    };\r\n\r\n    const onDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    return (\r\n        <View>\r\n\r\n        <Button  title=\"הזמנת תור\" onPress={() => visi()}>\r\n        </Button>\r\n    \r\n\r\n        <Modal visible={toApear} animationType=\"slide\">\r\n\r\n            <View style={styles.container}>\r\n                <CalendarPicker\r\n                    startFromMonday={false}\r\n                    weekdays={\r\n                        [\r\n                        'ראשון', \r\n                        'שני', \r\n                        'שלישי', \r\n                        'רביעי', \r\n                        'חמישי', \r\n                        'שישי', \r\n                        'שבת'\r\n                        ]}\r\n\r\n                    months={[\r\n                        'ינואר',\r\n                        'פברואר',\r\n                        'מרץ',\r\n                        'אפריל',\r\n                        'מאי',\r\n                        'יוני',\r\n                        'יולי',\r\n                        'אוגוסט',\r\n                        'ספטמבר',\r\n                        'אורטובר',\r\n                        'נובמבר',\r\n                        'דצמבר',\r\n                    ]}\r\n                    onDateChange={onDateChange}\r\n                    previousTitle = 'הקודם'\r\n                    nextTitle=\"הבא\"\r\n                />\r\n                <View style={{height:'50%', width: '97%', borderRadius:5}}>\r\n                     <ScrollView>\r\n                        {hours.map((h, i, all) => \r\n                        <TouchableOpacity onPress={() => console.log(all[i])}>\r\n                            <View style={{      borderWidth: 1,\r\n                                                borderColor: \"#FFD9D9\",\r\n                                                backgroundColor: \"#FFD9D9\",\r\n                                                borderRadius:10,\r\n                                                height:60,\r\n                                                marginLeft: 3,\r\n                                                marginRight: 3,\r\n                                                marginVertical: 2}} key={i}>\r\n                            <Text style={{    textAlign: 'right',\r\n                                                fontSize: 20}}>{all[i]}:00 </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                        )}\r\n                    </ScrollView>\r\n                    <Text> {selectedDate? selectedDate.toString() : 'no Choose'} </Text>\r\n                </View>\r\n                \r\n                <Button title=\"סגור\" onPress={() => visi()}></Button>\r\n            </View>\r\n        </Modal>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n        paddingTop: 0,\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 10,\r\n        borderTopRightRadius: 10,\r\n        borderColor: '#0000ff'\r\n  },\r\n  hours:{\r\n\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}