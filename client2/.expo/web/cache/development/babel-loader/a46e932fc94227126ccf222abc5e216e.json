{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport { Router } from \"./navigators/Router\";\nimport { UserProvider, UserContext } from \"./contexts/userContexts\";\nimport client from \"./api/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App(navigation) {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      Login = _useContext.Login;\n\n  useEffect(function _callee() {\n    var token, res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (!(token !== null)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(client.post('/users/userInfo', {\n              token: token\n            }).then(function (response) {\n              var newUser = response.data.user;\n              console.log(newUser._id);\n              Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\n              navigation.navigate('Welcome');\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 6:\n            res = _context.sent;\n\n          case 7:\n            return _context.abrupt(\"return\", function () {\n              return console.log(\"useEffect\");\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(UserProvider, {\n    children: _jsx(Router, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/hay12/OneDrive/שולחן העבודה/the/client/App.js"],"names":["StatusBar","createStackNavigator","AsyncStorage","useEffect","useState","createContext","useContext","Router","UserProvider","UserContext","client","App","navigation","user","Login","getItem","token","post","then","response","newUser","data","console","log","_id","username","email","phone","queues","navigate","catch","err","res","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAAQC,MAAR;AACA,SAAQC,YAAR,EAAsBC,WAAtB;AACA,OAAOC,MAAP;;AAEA,eAAe,SAASC,GAAT,CAAaC,UAAb,EAAyB;AACtC,oBAAsBN,UAAU,CAACG,WAAD,CAAhC;AAAA,MAAOI,IAAP,eAAOA,IAAP;AAAA,MAAaC,KAAb,eAAaA,KAAb;;AAEAX,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUD,YAAY,CAACa,OAAb,CAAqB,OAArB,CADV;;AAAA;AACJC,YAAAA,KADI;;AAAA,kBAEHA,KAAK,KAAK,IAFP;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGcN,MAAM,CAACO,IAAP,CAAY,iBAAZ,EAA+B;AAACD,cAAAA,KAAK,EAAEA;AAAR,aAA/B,EAChBE,IADgB,CACX,UAACC,QAAD,EAAc;AACjB,kBAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcR,IAA9B;AACAS,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAApB;AACAV,cAAAA,KAAK,CAACM,OAAO,CAACI,GAAT,EAAcJ,OAAO,CAACK,QAAtB,EAAgCL,OAAO,CAACM,KAAxC,EAA+CN,OAAO,CAACO,KAAvD,EAA8DP,OAAO,CAACQ,MAAtE,CAAL;AACAhB,cAAAA,UAAU,CAACiB,QAAX,CAAoB,SAApB;AACH,aANiB,EAMfC,KANe,CAMT,UAACC,GAAD,EAAS;AACdT,cAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,aARiB,CAHd;;AAAA;AAGEC,YAAAA,GAHF;;AAAA;AAAA,6CAaC;AAAA,qBAAMV,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,aAbD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAcN,EAdM,CAAT;AAgBA,SACE,KAAC,YAAD;AAAA,cACE,KAAC,MAAD;AADF,IADF;AAKD;AAED,IAAMU,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport {Router} from './navigators/Router'\nimport {UserProvider, UserContext} from './contexts/userContexts'\nimport client from \"./api/client\";\n\nexport default function App(navigation) {\n  const {user, Login} = useContext(UserContext);\n\n  useEffect(async () => {\n    let token = await AsyncStorage.getItem('token');\n      if(token !== null){\n        const res = await client.post('/users/userInfo', {token: token}\n        ).then((response) => {\n            const newUser = response.data.user;\n            console.log(newUser._id);\n            Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\n            navigation.navigate('Welcome');\n        }).catch((err) => {\n            console.log(err);\n        })\n      }\n      return () => console.log(\"useEffect\");;\n  }, [])\n\n  return (\n    <UserProvider>\n      <Router/>\n    </UserProvider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}