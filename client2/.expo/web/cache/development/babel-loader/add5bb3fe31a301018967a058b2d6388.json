{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AppStack } from \"./RootStack\";\nimport { AuthStackscreen } from \"./RootStack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { UserContext } from \"../contexts/userContexts\";\nimport { useContext, useEffect } from 'react';\nimport client from \"../api/client\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Router = function Router() {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      Login = _useContext.Login;\n\n  useEffect(function _callee() {\n    var token, res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (!(token !== null)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(client.post('/users/userInfo', {\n              token: token\n            }).then(function (response) {\n              var newUser = response.data.user;\n              Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 6:\n            res = _context.sent;\n\n          case 7:\n            return _context.abrupt(\"return\", function () {\n              return console.log(\"useEffect\");\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: user.isAuthenticated ? _jsx(AuthStackscreen, {}) : _jsx(AppStack, {})\n  });\n};","map":{"version":3,"sources":["C:/Users/hay12/OneDrive/שולחן העבודה/the/client/navigators/Router.js"],"names":["AppStack","AuthStackscreen","NavigationContainer","UserContext","useContext","useEffect","client","AsyncStorage","Router","user","Login","getItem","token","post","then","response","newUser","data","_id","username","email","phone","queues","catch","err","console","log","res","isAuthenticated"],"mappings":";AAAA,SAAQA,QAAR;AACA,SAAQC,eAAR;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,WAAR;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,oBAAsBJ,UAAU,CAACD,WAAD,CAAhC;AAAA,MAAOM,IAAP,eAAOA,IAAP;AAAA,MAAaC,KAAb,eAAaA,KAAb;;AAEAL,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUE,YAAY,CAACI,OAAb,CAAqB,OAArB,CADV;;AAAA;AACJC,YAAAA,KADI;;AAAA,kBAEHA,KAAK,KAAK,IAFP;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGcN,MAAM,CAACO,IAAP,CAAY,iBAAZ,EAA+B;AAACD,cAAAA,KAAK,EAAEA;AAAR,aAA/B,EAChBE,IADgB,CACX,UAACC,QAAD,EAAc;AACjB,kBAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcR,IAA9B;AACAC,cAAAA,KAAK,CAACM,OAAO,CAACE,GAAT,EAAcF,OAAO,CAACG,QAAtB,EAAgCH,OAAO,CAACI,KAAxC,EAA+CJ,OAAO,CAACK,KAAvD,EAA8DL,OAAO,CAACM,MAAtE,CAAL;AACH,aAJiB,EAIfC,KAJe,CAIT,UAACC,GAAD,EAAS;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,aANiB,CAHd;;AAAA;AAGEG,YAAAA,GAHF;;AAAA;AAAA,6CAWC;AAAA,qBAAMF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,aAXD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAYN,EAZM,CAAT;AAeA,SAEE,KAAC,mBAAD;AAAA,cAEGjB,IAAI,CAACmB,eAAL,GAAuB,KAAC,eAAD,KAAvB,GAA6C,KAAC,QAAD;AAFhD,IAFF;AAOD,CAzBM","sourcesContent":["import {AppStack} from './RootStack'\r\nimport {AuthStackscreen} from './RootStack'\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {UserContext} from '../contexts/userContexts'\r\nimport { useContext, useEffect } from 'react';\r\nimport client from \"../api/client\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const Router = () => {\r\n  const {user, Login} = useContext(UserContext);\r\n\r\n  useEffect(async () => {\r\n    let token = await AsyncStorage.getItem('token');\r\n      if(token !== null){\r\n        const res = await client.post('/users/userInfo', {token: token}\r\n        ).then((response) => {\r\n            const newUser = response.data.user;\r\n            Login(newUser._id, newUser.username, newUser.email, newUser.phone, newUser.queues);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n      }\r\n      return () => console.log(\"useEffect\");;\r\n  }, [])\r\n\r\n\r\n  return (\r\n\r\n    <NavigationContainer>\r\n      \r\n      {user.isAuthenticated ? <AuthStackscreen /> : <AppStack />}\r\n    </NavigationContainer>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}